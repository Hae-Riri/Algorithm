#include <string>
#include <vector>
#include <set>

using namespace std;
set<int> s; //순열 중복 여부 체크

bool isPrime(int n){ //소수인지 체크
    for(int i = 2; i<n;i++){
        if(n % i == 0){
            return false;
        }
    }
    return true;
}

bool check(int n){
    if(n == 0 || n == 1){
        return false;
    }
    if(s.find(n) == s.end()){
        s.insert(n);
        return true;
    }else{
        return false;
    }
}

void dfs(int n, string &numbers, vector<char> &tmp, int & answer, vector<bool>&visit){
    if(tmp.size() == n){
        string temp = "";
        for(char t : tmp){
            temp += t;
        }
        int number = stoi(temp);
        if(!check(number)){
            return;
        }
        bool success = isPrime(number);
        if(success){
            answer++;
        }
        return;
    }
    for(int i = 0; i<numbers.size();i++){
        if(!visit[i]){
            tmp.push_back(numbers[i]);
            visit[i] = true;
            dfs(n, numbers, tmp, answer, visit);
            visit[i] = false;
            tmp.pop_back();
        }
    }
}

int solution(string numbers) {
    int answer = 0;
    for(int i =1; i <= numbers.size(); i++){
        vector<bool> visit(numbers.size());
        vector<char> tmp;
        dfs(i, numbers, tmp, answer, visit);
    }
    return answer;
}